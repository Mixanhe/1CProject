Перем Флаг;

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр ЗаработнаяПлата
	Движения.ЗаработнаяПлата.Записывать = Истина;
	Для Каждого ТекСтрокаСписокСотрудников Из СписокСотрудников Цикл
		Движение = Движения.ЗаработнаяПлата.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.НачисленияСотрудникам.Оклад;
		Движение.ПериодДействияНачало = НачалоМесяца(Дата);
		Движение.ПериодДействияКонец = КонецМесяца(Дата);
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ТекСтрокаСписокСотрудников.ФИО;
		Движение.ДанныеДляРасчета = ТекСтрокаСписокСотрудников.Оклад;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	КонецЦикла;
	
	Движения.Записать();
	
	// получим запросом те данные, которые только что записали в регистр, с помощью нужного отбора
	Запрос = Новый Запрос;                         	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаработнаяПлатаДанныеГрафика.ДеньПериодДействия КАК Норма,
	|	ЗаработнаяПлатаДанныеГрафика.ДеньФактическийПериодДействия КАК Факт,
	|	ЗаработнаяПлатаДанныеГрафика.ДанныеДляРасчета КАК ДанныеДляРасчета,
	|	ЗаработнаяПлатаДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ЗаработнаяПлатаДанныеГрафика.Регистратор КАК Регистратор,
	|	ЗаработнаяПлатаДанныеГрафика.Сотрудник.Представление КАК СотрудникПредставление
	|ИЗ
	|	РегистрРасчета.ЗаработнаяПлата.ДанныеГрафика(Регистратор = &Регистратор) КАК ЗаработнаяПлатаДанныеГрафика";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// если запрос пустой, то обрабатывать становится нечего
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Отсутствуют необходимые данные");
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НаборЗаписей = РегистрыРасчета.ЗаработнаяПлата.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	// необходимо перебрать все значения, так как оклад выдается одним документом на всех сотрудников предприятия.
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		// так как далее в коде присуствует операция деления, то 
		// я считаю нужным обработать данную ситуацию, чтобы наверняка исключить 
		// деление на нуль.
		Если ВыборкаДетальныеЗаписи.Норма <> 0 Тогда
			
			// перезаписываем данные в документ перерасчитанными значениями
			Для Каждого СтрокаТЧ ИЗ СписокСотрудников Цикл
				
				// на всякий случай сопостовляю данные из выборки с тч
				// чтобы правильно подставить нужные суммы в оклады.
				Если ВыборкаДетальныеЗаписи.Сотрудник = СтрокаТЧ.ФИО Тогда
					// просто расчет, и запись данных, тут ничего особенного не происходит.
					РасчитанныйОкладЗаМесяц = СтрокаТЧ.Оклад * ВыборкаДетальныеЗаписи.Факт / ВыборкаДетальныеЗаписи.Норма;
					СтрокаТЧ.Оклад = РасчитанныйОкладЗаМесяц;
					
					Для Каждого Запись ИЗ НаборЗаписей Цикл
						
						Если СтрокаТЧ.ФИО = Запись.Сотрудник Тогда
							Запись.Сумма = РасчитанныйОкладЗаМесяц;
							Флаг = Истина;
							Прервать;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				// организую дополнительную проверку, чтобы лишний раз не гонять цикл.
				Если Флаг = Истина Тогда
					Флаг = ложь;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе                                                	
			Сообщить("Невено заполнены данные");
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписей.Записать(ИСТИНА);	
	// регистр ДолгиПоЗаработнойПлатеСотрудникам ПРИХОД
	Движения.ДолгиПоЗаработнойПлатеСотрудникам.Записывать = Истина;
	Для Каждого ТекСтрокаСписокСотрудников Из СписокСотрудников Цикл
		Движение = Движения.ДолгиПоЗаработнойПлатеСотрудникам.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = ТекСтрокаСписокСотрудников.ФИО;
		Движение.Сумма = ТекСтрокаСписокСотрудников.Оклад;
	КонецЦикла;
	
КонецПроцедуры
