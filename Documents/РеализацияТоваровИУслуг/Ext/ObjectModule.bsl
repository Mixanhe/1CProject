
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОстаткиМатериалов.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиМатериалов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	#Область УлучшенныйКонтрольОстатков
	
	  // 16.11.2020 -разрабатываю адекватный метод контроля остатков
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	//|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК КоличествоПродажа,
	//|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК СуммаПродажа,
	//|	РеализацияТоваровИУслугТовары.Ссылка.Представление КАК Представление
	//|ПОМЕСТИТЬ ВТ_Данные
	//|ИЗ
	//|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	//|ГДЕ
	//|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	РеализацияТоваровИУслугТовары.Номенклатура,
	//|	РеализацияТоваровИУслугТовары.Ссылка.Представление
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Номенклатура
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_Данные.Номенклатура КАК Номенклатура,
	//|	ВТ_Данные.КоличествоПродажа КАК КоличествоПродажа,
	//|	ВТ_Данные.СуммаПродажа КАК СуммаПродажа,
	//|	ОстаткиМатериаловОстатки.Склад КАК Склад,
	//|	ЕСТЬNULL(ОстаткиМатериаловОстатки.КоличествоОстаток, 0) КАК КоличествоНаличие,
	//|	ВТ_Данные.Представление КАК ДокументПредставление,
	//|	ВТ_Данные.Номенклатура.Представление КАК НоменклатураПредставление
	//|ИЗ
	//|	ВТ_Данные КАК ВТ_Данные
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиМатериалов.Остатки(
	//|				&МоментВремени,
	//|				Номенклатура В
	//|					(ВЫБРАТЬ
	//|						ВТ_Данные.Номенклатура КАК Номенклатура
	//|					ИЗ
	//|						ВТ_Данные КАК ВТ_Данные)) КАК ОстаткиМатериаловОстатки
	//|		ПО ВТ_Данные.Номенклатура = ОстаткиМатериаловОстатки.Номенклатура
	//|ГДЕ
	//|	ОстаткиМатериаловОстатки.Склад = &Склад
	//|ИТОГИ
	//|	МАКСИМУМ(КоличествоПродажа),
	//|	МАКСИМУМ(СуммаПродажа),
	//|	СУММА(КоличествоНаличие)
	//|ПО
	//|	Номенклатура";
	//
	//Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Запрос.УстановитьПараметр("Склад", Склад);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//
	//Пока ВыборкаНоменклатура.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаНоменклатура
	//	
	//	Если ВыборкаНоменклатура.КоличествоПродажа > ВыборкаНоменклатура.КоличествоНаличие Тогда
	//		Сообщить("Проведение невозможно");
	//		Отказ = Истина;
	//	КонецЕсли;
	//	
	//	Если НЕ Отказ Тогда	
	//		
	//		
	//		ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
	//		
	//		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//			// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//		КонецЦикла;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	
	#КонецОбласти	
	
	#Область КонтроляОстатков
	Движения.Записать();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиМатериаловОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиМатериаловОстатки.Склад КАК Склад,
	|	ЕСТЬNULL(-ОстаткиМатериаловОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ОстаткиМатериаловОстатки.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ОстаткиМатериаловОстатки.Склад.Представление КАК СкладПредставление
	|ИЗ
	|	РегистрНакопления.ОстаткиМатериалов.Остатки(
	|			,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура
	|				ИЗ
	|					Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|				ГДЕ
	|					РеализацияТоваровИУслугТовары.Ссылка = &Ссылка)) КАК ОстаткиМатериаловОстатки
	|ГДЕ
	|	ОстаткиМатериаловОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Отказ = Истина;
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
			Сообщить("Не хватает позиций товара " + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " в количестве " + ВыборкаДетальныеЗаписи.Количество + " на складе "  + ВыборкаДетальныеЗаписи.СкладПредставление);	
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область РасчетСебестоимость
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движения.СебестоимостьНоменклатуры.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	
	Запрос2 = Новый Запрос;
	Запрос2.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|ГДЕ
	|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугТовары.Номенклатура";
	
	Запрос2.УстановитьПараметр("Ссылка",Ссылка);
	
	МассивНоменклатуры = Запрос2.Выполнить().Выгрузить();
	
	Запрос3 = Новый Запрос;
	Запрос3.Текст = "ВЫБРАТЬ
	|	СебестоимостьНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	СебестоимостьНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток,
	|	СебестоимостьНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.СебестоимостьНоменклатуры.Остатки(
	|			&МоментВремени,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура
	|				ИЗ
	|					Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|				ГДЕ
	|					РеализацияТоваровИУслугТовары.Ссылка = &Ссылка)) КАК СебестоимостьНоменклатурыОстатки";
	
	Запрос3.УстановитьПараметр("Ссылка", Ссылка);
	Запрос3.УстановитьПараметр("МоментВремени",МоментВремени());
	
	МассивВсейНоменклатуры = Запрос3.Выполнить().Выгрузить();
	
	СебестоимостьДокумента = 0;
	
	Для Каждого ЭлементМассива ИЗ МассивНоменклатуры Цикл	
		
		Если МассивВсейНоменклатуры.Количество() = 0 Тогда
			СебестоимостьЕдиницыНоменклатуры = 0;
		КонецЕсли;
		
		// теперь задача самая простая (какжеяошибался)(02.11.2020 НАЧАЛ). Записать данные в регистр по товарам.
		// попадалово, теперь нужно обработать такую ситуацию, что вдруг пользователь 
		// захочет ввести данные по разному, допустим в разных строках будет один и тот же товар
		// поэтому движения будут сформированы не совсем корректно, теперь мне предстоит расчитывать все строки
		// для корректной записи движений регистра. Задача состоит в том, чтобы получить количество
		// и номенклатуру, а так же все правильно это записать.
		
		// пока не могу обработать ситуацию проще, приходится лепить такой костыль, надеюсь в ближайшем времени сделаю
		// более адекватный вариант своей работы.
		// Крашит программа при попытке проведения и продаже документов по процам А3 и выше, так как движения в себестоимость
		// он не отображает, поэтому все только начинается.
		
		
		
		// 16.11.2020 ПОЛНОЕ ДЕРЬМИЩЕ КОД, ХОЧУ ЕГО ЧУТЬ ЛИ НЕ С НУЛЯ ПЕРЕПИСАТЬ.
		Для Каждого ЭлементВложенногоМассива ИЗ МассивВсейНоменклатуры Цикл
			Если ЭлементМассива.Номенклатура = ЭлементВложенногоМассива.Номенклатура Тогда
				Если ЭлементВложенногоМассива.СуммаОстаток <> 0  Тогда
					СебестоимостьЕдиницыНоменклатуры = ЭлементВложенногоМассива.СуммаОстаток/ЭлементВложенногоМассива.КоличествоОстаток;
					Прервать;
				Иначе
					СебестоимостьЕдиницыНоменклатуры = 0;
					Прервать;
				КонецЕсли;		
			КонецЕсли;
		КонецЦикла;
		
		СебестоимостьПродажи = СебестоимостьЕдиницыНоменклатуры * ЭлементМассива.Количество;
		
		// Регистр накопления СебестоимостьНоменклатуры ПРИХОД
		Движение = Движения.СебестоимостьНоменклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ЭлементМассива.Номенклатура;
		Движение.Количество = ЭлементМассива.Количество;
		Движение.Сумма = СебестоимостьПродажи;
		
		// Регистр накопления Продажи Обороты
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ЭлементМассива.Номенклатура;
		Движение.Количество = ЭлементМассива.Количество;
		Движение.Сумма = ЭлементМассива.Сумма;
		Движение.Себестоимость = СебестоимостьПродажи;
		
		СебестоимостьДокумента = СебестоимостьДокумента + СебестоимостьПродажи;
		
	КонецЦикла;
	
	#КонецОбласти
	
	#Область ЗаписиВРегистрБухгалтерии
	// регистр Бухгалтерии Расчетный
	Движения.Расчетный.Записывать = Истина;
	
	// 3 проводка, оплата покупателя
	Проводка = Движения.Расчетный.Добавить();
	Проводка.Период = Дата;
	Проводка.СчетДт = ПланыСчетов.Основной.РасчетныеСчета;
	Проводка.СчетКт = ПланыСчетов.Основной.РасчетыСПокупателямиИЗаказчиками;
	Проводка.Сумма =  ДокументИтог;
	
	// 1  проводка 
	Проводка = Движения.Расчетный.Добавить();
	Проводка.Период = Дата;
	Проводка.СчетДт = ПланыСчетов.Основной.РасчетыСПокупателямиИЗаказчиками;
	Проводка.СчетКт = ПланыСчетов.Основной.Выручка;
	Проводка.Сумма =  ДокументИтог; 
	
	// 2 проводка
	Проводка = Движения.Расчетный.Добавить();
	Проводка.Период = Дата;
	Проводка.СчетДт = ПланыСчетов.Основной.Себестоимость;
	Проводка.СчетКт = ПланыСчетов.Основной.Товары;
	Проводка.Сумма = СебестоимостьДокумента;
	
	#КонецОбласти          
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ДокументИтог = Товары.Итог("Сумма");
КонецПроцедуры

